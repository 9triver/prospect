package com.cvicse.jy1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FrontlineAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrontlineAllPropertiesEquals(Frontline expected, Frontline actual) {
        assertFrontlineAutoGeneratedPropertiesEquals(expected, actual);
        assertFrontlineAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrontlineAllUpdatablePropertiesEquals(Frontline expected, Frontline actual) {
        assertFrontlineUpdatableFieldsEquals(expected, actual);
        assertFrontlineUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrontlineAutoGeneratedPropertiesEquals(Frontline expected, Frontline actual) {
        assertThat(expected)
            .as("Verify Frontline auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrontlineUpdatableFieldsEquals(Frontline expected, Frontline actual) {
        assertThat(expected)
            .as("Verify Frontline relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrontlineUpdatableRelationshipsEquals(Frontline expected, Frontline actual) {
        assertThat(expected)
            .as("Verify Frontline relationships")
            .satisfies(e -> assertThat(e.getOfficers()).as("check officers").isEqualTo(actual.getOfficers()));
    }
}
