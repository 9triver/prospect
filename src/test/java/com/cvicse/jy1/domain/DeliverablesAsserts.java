package com.cvicse.jy1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeliverablesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeliverablesAllPropertiesEquals(Deliverables expected, Deliverables actual) {
        assertDeliverablesAutoGeneratedPropertiesEquals(expected, actual);
        assertDeliverablesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeliverablesAllUpdatablePropertiesEquals(Deliverables expected, Deliverables actual) {
        assertDeliverablesUpdatableFieldsEquals(expected, actual);
        assertDeliverablesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeliverablesAutoGeneratedPropertiesEquals(Deliverables expected, Deliverables actual) {
        assertThat(expected)
            .as("Verify Deliverables auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeliverablesUpdatableFieldsEquals(Deliverables expected, Deliverables actual) {
        assertThat(expected)
            .as("Verify Deliverables relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getParentcode()).as("check parentcode").isEqualTo(actual.getParentcode()))
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeliverablesUpdatableRelationshipsEquals(Deliverables expected, Deliverables actual) {}
}
