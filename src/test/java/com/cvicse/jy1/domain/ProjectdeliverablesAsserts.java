package com.cvicse.jy1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectdeliverablesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectdeliverablesAllPropertiesEquals(Projectdeliverables expected, Projectdeliverables actual) {
        assertProjectdeliverablesAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectdeliverablesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectdeliverablesAllUpdatablePropertiesEquals(Projectdeliverables expected, Projectdeliverables actual) {
        assertProjectdeliverablesUpdatableFieldsEquals(expected, actual);
        assertProjectdeliverablesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectdeliverablesAutoGeneratedPropertiesEquals(Projectdeliverables expected, Projectdeliverables actual) {
        assertThat(expected)
            .as("Verify Projectdeliverables auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectdeliverablesUpdatableFieldsEquals(Projectdeliverables expected, Projectdeliverables actual) {
        assertThat(expected)
            .as("Verify Projectdeliverables relevant properties")
            .satisfies(e -> assertThat(e.getParentcode()).as("check parentcode").isEqualTo(actual.getParentcode()))
            .satisfies(e -> assertThat(e.getIsSubmit()).as("check isSubmit").isEqualTo(actual.getIsSubmit()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectdeliverablesUpdatableRelationshipsEquals(Projectdeliverables expected, Projectdeliverables actual) {
        assertThat(expected)
            .as("Verify Projectdeliverables relationships")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getBelongwbsids()).as("check belongwbsids").isEqualTo(actual.getBelongwbsids()))
            .satisfies(e -> assertThat(e.getBelongworkbagids()).as("check belongworkbagids").isEqualTo(actual.getBelongworkbagids()));
    }
}
