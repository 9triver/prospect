package com.cvicse.jy1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QualityObjectivesDictionaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityObjectivesDictionaryAllPropertiesEquals(
        QualityObjectivesDictionary expected,
        QualityObjectivesDictionary actual
    ) {
        assertQualityObjectivesDictionaryAutoGeneratedPropertiesEquals(expected, actual);
        assertQualityObjectivesDictionaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityObjectivesDictionaryAllUpdatablePropertiesEquals(
        QualityObjectivesDictionary expected,
        QualityObjectivesDictionary actual
    ) {
        assertQualityObjectivesDictionaryUpdatableFieldsEquals(expected, actual);
        assertQualityObjectivesDictionaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityObjectivesDictionaryAutoGeneratedPropertiesEquals(
        QualityObjectivesDictionary expected,
        QualityObjectivesDictionary actual
    ) {
        assertThat(expected)
            .as("Verify QualityObjectivesDictionary auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityObjectivesDictionaryUpdatableFieldsEquals(
        QualityObjectivesDictionary expected,
        QualityObjectivesDictionary actual
    ) {
        assertThat(expected)
            .as("Verify QualityObjectivesDictionary relevant properties")
            .satisfies(e -> assertThat(e.getObjectiveslevel()).as("check objectiveslevel").isEqualTo(actual.getObjectiveslevel()))
            .satisfies(e -> assertThat(e.getObjectivestype()).as("check objectivestype").isEqualTo(actual.getObjectivestype()))
            .satisfies(e -> assertThat(e.getObjectivesname()).as("check objectivesname").isEqualTo(actual.getObjectivesname()))
            .satisfies(e -> assertThat(e.getObjectivescontent()).as("check objectivescontent").isEqualTo(actual.getObjectivescontent()))
            .satisfies(e -> assertThat(e.getCalculationmethod()).as("check calculationmethod").isEqualTo(actual.getCalculationmethod()))
            .satisfies(e -> assertThat(e.getFrequency()).as("check frequency").isEqualTo(actual.getFrequency()))
            .satisfies(e -> assertThat(e.getEvaluationcriteria()).as("check evaluationcriteria").isEqualTo(actual.getEvaluationcriteria()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityObjectivesDictionaryUpdatableRelationshipsEquals(
        QualityObjectivesDictionary expected,
        QualityObjectivesDictionary actual
    ) {}
}
