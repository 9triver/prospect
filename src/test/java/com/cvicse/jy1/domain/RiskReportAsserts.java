package com.cvicse.jy1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RiskReportAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskReportAllPropertiesEquals(RiskReport expected, RiskReport actual) {
        assertRiskReportAutoGeneratedPropertiesEquals(expected, actual);
        assertRiskReportAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskReportAllUpdatablePropertiesEquals(RiskReport expected, RiskReport actual) {
        assertRiskReportUpdatableFieldsEquals(expected, actual);
        assertRiskReportUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskReportAutoGeneratedPropertiesEquals(RiskReport expected, RiskReport actual) {
        assertThat(expected)
            .as("Verify RiskReport auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskReportUpdatableFieldsEquals(RiskReport expected, RiskReport actual) {
        assertThat(expected)
            .as("Verify RiskReport relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getYear()).as("check year").isEqualTo(actual.getYear()))
            .satisfies(e -> assertThat(e.getRiskreportname()).as("check riskreportname").isEqualTo(actual.getRiskreportname()))
            .satisfies(e -> assertThat(e.getReporttime()).as("check reporttime").isEqualTo(actual.getReporttime()))
            .satisfies(e -> assertThat(e.getAuditStatus()).as("check auditStatus").isEqualTo(actual.getAuditStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskReportUpdatableRelationshipsEquals(RiskReport expected, RiskReport actual) {
        assertThat(expected)
            .as("Verify RiskReport relationships")
            .satisfies(e -> assertThat(e.getCreatorid()).as("check creatorid").isEqualTo(actual.getCreatorid()))
            .satisfies(e -> assertThat(e.getWbsid()).as("check wbsid").isEqualTo(actual.getWbsid()))
            .satisfies(e -> assertThat(e.getWorkbag()).as("check workbag").isEqualTo(actual.getWorkbag()));
    }
}
