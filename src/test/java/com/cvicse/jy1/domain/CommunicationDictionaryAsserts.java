package com.cvicse.jy1.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunicationDictionaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunicationDictionaryAllPropertiesEquals(CommunicationDictionary expected, CommunicationDictionary actual) {
        assertCommunicationDictionaryAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunicationDictionaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunicationDictionaryAllUpdatablePropertiesEquals(
        CommunicationDictionary expected,
        CommunicationDictionary actual
    ) {
        assertCommunicationDictionaryUpdatableFieldsEquals(expected, actual);
        assertCommunicationDictionaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunicationDictionaryAutoGeneratedPropertiesEquals(
        CommunicationDictionary expected,
        CommunicationDictionary actual
    ) {
        assertThat(expected)
            .as("Verify CommunicationDictionary auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunicationDictionaryUpdatableFieldsEquals(
        CommunicationDictionary expected,
        CommunicationDictionary actual
    ) {
        assertThat(expected)
            .as("Verify CommunicationDictionary relevant properties")
            .satisfies(e -> assertThat(e.getPartiesname()).as("check partiesname").isEqualTo(actual.getPartiesname()))
            .satisfies(e -> assertThat(e.getPartiestype()).as("check partiestype").isEqualTo(actual.getPartiestype()))
            .satisfies(e -> assertThat(e.getPartiesduty()).as("check partiesduty").isEqualTo(actual.getPartiesduty()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunicationDictionaryUpdatableRelationshipsEquals(
        CommunicationDictionary expected,
        CommunicationDictionary actual
    ) {}
}
