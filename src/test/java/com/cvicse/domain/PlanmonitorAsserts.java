package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlanmonitorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanmonitorAllPropertiesEquals(Planmonitor expected, Planmonitor actual) {
        assertPlanmonitorAutoGeneratedPropertiesEquals(expected, actual);
        assertPlanmonitorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanmonitorAllUpdatablePropertiesEquals(Planmonitor expected, Planmonitor actual) {
        assertPlanmonitorUpdatableFieldsEquals(expected, actual);
        assertPlanmonitorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanmonitorAutoGeneratedPropertiesEquals(Planmonitor expected, Planmonitor actual) {
        assertThat(expected)
            .as("Verify Planmonitor auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanmonitorUpdatableFieldsEquals(Planmonitor expected, Planmonitor actual) {
        assertThat(expected)
            .as("Verify Planmonitor relevant properties")
            .satisfies(e -> assertThat(e.getMonth()).as("check month").isEqualTo(actual.getMonth()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getYear()).as("check year").isEqualTo(actual.getYear()))
            .satisfies(e -> assertThat(e.getSecretlevel()).as("check secretlevel").isEqualTo(actual.getSecretlevel()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanmonitorUpdatableRelationshipsEquals(Planmonitor expected, Planmonitor actual) {}
}
