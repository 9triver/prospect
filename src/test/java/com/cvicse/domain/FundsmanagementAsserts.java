package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FundsmanagementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFundsmanagementAllPropertiesEquals(Fundsmanagement expected, Fundsmanagement actual) {
        assertFundsmanagementAutoGeneratedPropertiesEquals(expected, actual);
        assertFundsmanagementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFundsmanagementAllUpdatablePropertiesEquals(Fundsmanagement expected, Fundsmanagement actual) {
        assertFundsmanagementUpdatableFieldsEquals(expected, actual);
        assertFundsmanagementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFundsmanagementAutoGeneratedPropertiesEquals(Fundsmanagement expected, Fundsmanagement actual) {
        assertThat(expected)
            .as("Verify Fundsmanagement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFundsmanagementUpdatableFieldsEquals(Fundsmanagement expected, Fundsmanagement actual) {
        assertThat(expected)
            .as("Verify Fundsmanagement relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStarttime()).as("check starttime").isEqualTo(actual.getStarttime()))
            .satisfies(e -> assertThat(e.getEndtime()).as("check endtime").isEqualTo(actual.getEndtime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFundsmanagementUpdatableRelationshipsEquals(Fundsmanagement expected, Fundsmanagement actual) {
        assertThat(expected)
            .as("Verify Fundsmanagement relationships")
            .satisfies(e -> assertThat(e.getWbs()).as("check wbs").isEqualTo(actual.getWbs()));
    }
}
