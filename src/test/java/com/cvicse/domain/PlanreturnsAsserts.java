package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlanreturnsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanreturnsAllPropertiesEquals(Planreturns expected, Planreturns actual) {
        assertPlanreturnsAutoGeneratedPropertiesEquals(expected, actual);
        assertPlanreturnsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanreturnsAllUpdatablePropertiesEquals(Planreturns expected, Planreturns actual) {
        assertPlanreturnsUpdatableFieldsEquals(expected, actual);
        assertPlanreturnsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanreturnsAutoGeneratedPropertiesEquals(Planreturns expected, Planreturns actual) {
        assertThat(expected)
            .as("Verify Planreturns auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanreturnsUpdatableFieldsEquals(Planreturns expected, Planreturns actual) {
        assertThat(expected)
            .as("Verify Planreturns relevant properties")
            .satisfies(e -> assertThat(e.getPlanreturnsid()).as("check planreturnsid").isEqualTo(actual.getPlanreturnsid()))
            .satisfies(e -> assertThat(e.getPlanreturnsname()).as("check planreturnsname").isEqualTo(actual.getPlanreturnsname()))
            .satisfies(e -> assertThat(e.getStarttime()).as("check starttime").isEqualTo(actual.getStarttime()))
            .satisfies(e -> assertThat(e.getEndtime()).as("check endtime").isEqualTo(actual.getEndtime()))
            .satisfies(e -> assertThat(e.getPlantype()).as("check plantype").isEqualTo(actual.getPlantype()))
            .satisfies(e -> assertThat(e.getReturnstime()).as("check returnstime").isEqualTo(actual.getReturnstime()))
            .satisfies(e -> assertThat(e.getReturnsstatus()).as("check returnsstatus").isEqualTo(actual.getReturnsstatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanreturnsUpdatableRelationshipsEquals(Planreturns expected, Planreturns actual) {}
}
