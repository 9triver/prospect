package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectHumanresourcesplanAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectHumanresourcesplanAllPropertiesEquals(
        ProjectHumanresourcesplan expected,
        ProjectHumanresourcesplan actual
    ) {
        assertProjectHumanresourcesplanAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectHumanresourcesplanAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectHumanresourcesplanAllUpdatablePropertiesEquals(
        ProjectHumanresourcesplan expected,
        ProjectHumanresourcesplan actual
    ) {
        assertProjectHumanresourcesplanUpdatableFieldsEquals(expected, actual);
        assertProjectHumanresourcesplanUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectHumanresourcesplanAutoGeneratedPropertiesEquals(
        ProjectHumanresourcesplan expected,
        ProjectHumanresourcesplan actual
    ) {
        assertThat(expected)
            .as("Verify ProjectHumanresourcesplan auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectHumanresourcesplanUpdatableFieldsEquals(
        ProjectHumanresourcesplan expected,
        ProjectHumanresourcesplan actual
    ) {
        assertThat(expected)
            .as("Verify ProjectHumanresourcesplan relevant properties")
            .satisfies(e -> assertThat(e.getProjectname()).as("check projectname").isEqualTo(actual.getProjectname()))
            .satisfies(e -> assertThat(e.getClientname()).as("check clientname").isEqualTo(actual.getClientname()))
            .satisfies(e -> assertThat(e.getPlandate()).as("check plandate").isEqualTo(actual.getPlandate()))
            .satisfies(e -> assertThat(e.getSecretlevel()).as("check secretlevel").isEqualTo(actual.getSecretlevel()))
            .satisfies(e -> assertThat(e.getAuditStatus()).as("check auditStatus").isEqualTo(actual.getAuditStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectHumanresourcesplanUpdatableRelationshipsEquals(
        ProjectHumanresourcesplan expected,
        ProjectHumanresourcesplan actual
    ) {
        assertThat(expected)
            .as("Verify ProjectHumanresourcesplan relationships")
            .satisfies(e -> assertThat(e.getProject()).as("check project").isEqualTo(actual.getProject()));
    }
}
