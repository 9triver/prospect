package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SecuritymanagementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecuritymanagementAllPropertiesEquals(Securitymanagement expected, Securitymanagement actual) {
        assertSecuritymanagementAutoGeneratedPropertiesEquals(expected, actual);
        assertSecuritymanagementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecuritymanagementAllUpdatablePropertiesEquals(Securitymanagement expected, Securitymanagement actual) {
        assertSecuritymanagementUpdatableFieldsEquals(expected, actual);
        assertSecuritymanagementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecuritymanagementAutoGeneratedPropertiesEquals(Securitymanagement expected, Securitymanagement actual) {
        assertThat(expected)
            .as("Verify Securitymanagement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecuritymanagementUpdatableFieldsEquals(Securitymanagement expected, Securitymanagement actual) {
        assertThat(expected)
            .as("Verify Securitymanagement relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStarttime()).as("check starttime").isEqualTo(actual.getStarttime()))
            .satisfies(e -> assertThat(e.getEndtime()).as("check endtime").isEqualTo(actual.getEndtime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecuritymanagementUpdatableRelationshipsEquals(Securitymanagement expected, Securitymanagement actual) {
        assertThat(expected)
            .as("Verify Securitymanagement relationships")
            .satisfies(e -> assertThat(e.getWbs()).as("check wbs").isEqualTo(actual.getWbs()));
    }
}
