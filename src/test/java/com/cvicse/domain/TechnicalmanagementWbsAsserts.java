package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TechnicalmanagementWbsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechnicalmanagementWbsAllPropertiesEquals(TechnicalmanagementWbs expected, TechnicalmanagementWbs actual) {
        assertTechnicalmanagementWbsAutoGeneratedPropertiesEquals(expected, actual);
        assertTechnicalmanagementWbsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechnicalmanagementWbsAllUpdatablePropertiesEquals(
        TechnicalmanagementWbs expected,
        TechnicalmanagementWbs actual
    ) {
        assertTechnicalmanagementWbsUpdatableFieldsEquals(expected, actual);
        assertTechnicalmanagementWbsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechnicalmanagementWbsAutoGeneratedPropertiesEquals(
        TechnicalmanagementWbs expected,
        TechnicalmanagementWbs actual
    ) {
        assertThat(expected)
            .as("Verify TechnicalmanagementWbs auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechnicalmanagementWbsUpdatableFieldsEquals(TechnicalmanagementWbs expected, TechnicalmanagementWbs actual) {
        assertThat(expected)
            .as("Verify TechnicalmanagementWbs relevant properties")
            .satisfies(e -> assertThat(e.getWbsspare1()).as("check wbsspare1").isEqualTo(actual.getWbsspare1()))
            .satisfies(e -> assertThat(e.getWbsspare2()).as("check wbsspare2").isEqualTo(actual.getWbsspare2()))
            .satisfies(e -> assertThat(e.getWbsspare3()).as("check wbsspare3").isEqualTo(actual.getWbsspare3()))
            .satisfies(e -> assertThat(e.getWbsspare4()).as("check wbsspare4").isEqualTo(actual.getWbsspare4()))
            .satisfies(e -> assertThat(e.getWbsspare5()).as("check wbsspare5").isEqualTo(actual.getWbsspare5()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTechnicalmanagementWbsUpdatableRelationshipsEquals(
        TechnicalmanagementWbs expected,
        TechnicalmanagementWbs actual
    ) {
        assertThat(expected)
            .as("Verify TechnicalmanagementWbs relationships")
            .satisfies(e -> assertThat(e.getTechnicalCondition()).as("check technicalCondition").isEqualTo(actual.getTechnicalCondition()));
    }
}
