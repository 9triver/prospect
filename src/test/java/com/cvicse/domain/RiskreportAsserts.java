package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RiskreportAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskreportAllPropertiesEquals(Riskreport expected, Riskreport actual) {
        assertRiskreportAutoGeneratedPropertiesEquals(expected, actual);
        assertRiskreportAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskreportAllUpdatablePropertiesEquals(Riskreport expected, Riskreport actual) {
        assertRiskreportUpdatableFieldsEquals(expected, actual);
        assertRiskreportUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskreportAutoGeneratedPropertiesEquals(Riskreport expected, Riskreport actual) {
        assertThat(expected)
            .as("Verify Riskreport auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskreportUpdatableFieldsEquals(Riskreport expected, Riskreport actual) {
        assertThat(expected)
            .as("Verify Riskreport relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getRiskreportname()).as("check riskreportname").isEqualTo(actual.getRiskreportname()))
            .satisfies(e -> assertThat(e.getReleasetime()).as("check releasetime").isEqualTo(actual.getReleasetime()))
            .satisfies(e -> assertThat(e.getAuditStatus()).as("check auditStatus").isEqualTo(actual.getAuditStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskreportUpdatableRelationshipsEquals(Riskreport expected, Riskreport actual) {
        assertThat(expected)
            .as("Verify Riskreport relationships")
            .satisfies(e -> assertThat(e.getRiskidentification()).as("check riskidentification").isEqualTo(actual.getRiskidentification()))
            .satisfies(e -> assertThat(e.getCreatorid()).as("check creatorid").isEqualTo(actual.getCreatorid()))
            .satisfies(e -> assertThat(e.getAuditorid()).as("check auditorid").isEqualTo(actual.getAuditorid()));
    }
}
