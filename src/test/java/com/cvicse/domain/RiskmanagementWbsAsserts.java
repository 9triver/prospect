package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RiskmanagementWbsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskmanagementWbsAllPropertiesEquals(RiskmanagementWbs expected, RiskmanagementWbs actual) {
        assertRiskmanagementWbsAutoGeneratedPropertiesEquals(expected, actual);
        assertRiskmanagementWbsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskmanagementWbsAllUpdatablePropertiesEquals(RiskmanagementWbs expected, RiskmanagementWbs actual) {
        assertRiskmanagementWbsUpdatableFieldsEquals(expected, actual);
        assertRiskmanagementWbsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskmanagementWbsAutoGeneratedPropertiesEquals(RiskmanagementWbs expected, RiskmanagementWbs actual) {
        assertThat(expected)
            .as("Verify RiskmanagementWbs auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskmanagementWbsUpdatableFieldsEquals(RiskmanagementWbs expected, RiskmanagementWbs actual) {
        assertThat(expected)
            .as("Verify RiskmanagementWbs relevant properties")
            .satisfies(e -> assertThat(e.getWbsspare1()).as("check wbsspare1").isEqualTo(actual.getWbsspare1()))
            .satisfies(e -> assertThat(e.getWbsspare2()).as("check wbsspare2").isEqualTo(actual.getWbsspare2()))
            .satisfies(e -> assertThat(e.getWbsspare3()).as("check wbsspare3").isEqualTo(actual.getWbsspare3()))
            .satisfies(e -> assertThat(e.getWbsspare4()).as("check wbsspare4").isEqualTo(actual.getWbsspare4()))
            .satisfies(e -> assertThat(e.getWbsspare5()).as("check wbsspare5").isEqualTo(actual.getWbsspare5()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRiskmanagementWbsUpdatableRelationshipsEquals(RiskmanagementWbs expected, RiskmanagementWbs actual) {
        assertThat(expected)
            .as("Verify RiskmanagementWbs relationships")
            .satisfies(e -> assertThat(e.getRiskidentification()).as("check riskidentification").isEqualTo(actual.getRiskidentification()))
            .satisfies(e -> assertThat(e.getRiskreport()).as("check riskreport").isEqualTo(actual.getRiskreport()));
    }
}
