package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QualityreturnsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityreturnsAllPropertiesEquals(Qualityreturns expected, Qualityreturns actual) {
        assertQualityreturnsAutoGeneratedPropertiesEquals(expected, actual);
        assertQualityreturnsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityreturnsAllUpdatablePropertiesEquals(Qualityreturns expected, Qualityreturns actual) {
        assertQualityreturnsUpdatableFieldsEquals(expected, actual);
        assertQualityreturnsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityreturnsAutoGeneratedPropertiesEquals(Qualityreturns expected, Qualityreturns actual) {
        assertThat(expected)
            .as("Verify Qualityreturns auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityreturnsUpdatableFieldsEquals(Qualityreturns expected, Qualityreturns actual) {
        assertThat(expected)
            .as("Verify Qualityreturns relevant properties")
            .satisfies(e -> assertThat(e.getQualityreturnsid()).as("check qualityreturnsid").isEqualTo(actual.getQualityreturnsid()))
            .satisfies(e -> assertThat(e.getQualityreturnsname()).as("check qualityreturnsname").isEqualTo(actual.getQualityreturnsname()))
            .satisfies(e -> assertThat(e.getStarttime()).as("check starttime").isEqualTo(actual.getStarttime()))
            .satisfies(e -> assertThat(e.getEndtime()).as("check endtime").isEqualTo(actual.getEndtime()))
            .satisfies(e -> assertThat(e.getQualitytype()).as("check qualitytype").isEqualTo(actual.getQualitytype()))
            .satisfies(e -> assertThat(e.getReturnstime()).as("check returnstime").isEqualTo(actual.getReturnstime()))
            .satisfies(e -> assertThat(e.getReturnsstatus()).as("check returnsstatus").isEqualTo(actual.getReturnsstatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQualityreturnsUpdatableRelationshipsEquals(Qualityreturns expected, Qualityreturns actual) {}
}
