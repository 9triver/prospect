package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectchargeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectchargeAllPropertiesEquals(Projectcharge expected, Projectcharge actual) {
        assertProjectchargeAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectchargeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectchargeAllUpdatablePropertiesEquals(Projectcharge expected, Projectcharge actual) {
        assertProjectchargeUpdatableFieldsEquals(expected, actual);
        assertProjectchargeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectchargeAutoGeneratedPropertiesEquals(Projectcharge expected, Projectcharge actual) {
        assertThat(expected)
            .as("Verify Projectcharge auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectchargeUpdatableFieldsEquals(Projectcharge expected, Projectcharge actual) {
        assertThat(expected)
            .as("Verify Projectcharge relevant properties")
            .satisfies(e -> assertThat(e.getProjectname()).as("check projectname").isEqualTo(actual.getProjectname()))
            .satisfies(e -> assertThat(e.getFormid()).as("check formid").isEqualTo(actual.getFormid()))
            .satisfies(e -> assertThat(e.getSecretlevel()).as("check secretlevel").isEqualTo(actual.getSecretlevel()))
            .satisfies(e -> assertThat(e.getRequestdeportment()).as("check requestdeportment").isEqualTo(actual.getRequestdeportment()))
            .satisfies(e -> assertThat(e.getChargetype()).as("check chargetype").isEqualTo(actual.getChargetype()))
            .satisfies(e -> assertThat(e.getChargecontent()).as("check chargecontent").isEqualTo(actual.getChargecontent()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectchargeUpdatableRelationshipsEquals(Projectcharge expected, Projectcharge actual) {
        assertThat(expected)
            .as("Verify Projectcharge relationships")
            .satisfies(e -> assertThat(e.getCreatorid()).as("check creatorid").isEqualTo(actual.getCreatorid()));
    }
}
