package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ApprovalAgentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApprovalAgentAllPropertiesEquals(ApprovalAgent expected, ApprovalAgent actual) {
        assertApprovalAgentAutoGeneratedPropertiesEquals(expected, actual);
        assertApprovalAgentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApprovalAgentAllUpdatablePropertiesEquals(ApprovalAgent expected, ApprovalAgent actual) {
        assertApprovalAgentUpdatableFieldsEquals(expected, actual);
        assertApprovalAgentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApprovalAgentAutoGeneratedPropertiesEquals(ApprovalAgent expected, ApprovalAgent actual) {
        assertThat(expected)
            .as("Verify ApprovalAgent auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApprovalAgentUpdatableFieldsEquals(ApprovalAgent expected, ApprovalAgent actual) {
        assertThat(expected)
            .as("Verify ApprovalAgent relevant properties")
            .satisfies(e -> assertThat(e.getAgentid()).as("check agentid").isEqualTo(actual.getAgentid()))
            .satisfies(e -> assertThat(e.getAgentname()).as("check agentname").isEqualTo(actual.getAgentname()))
            .satisfies(e -> assertThat(e.getAgentstarttime()).as("check agentstarttime").isEqualTo(actual.getAgentstarttime()))
            .satisfies(e -> assertThat(e.getAutocanceltime()).as("check autocanceltime").isEqualTo(actual.getAutocanceltime()))
            .satisfies(e -> assertThat(e.getAgentdepartment()).as("check agentdepartment").isEqualTo(actual.getAgentdepartment()))
            .satisfies(
                e -> assertThat(e.getOriginalapprovalname()).as("check originalapprovalname").isEqualTo(actual.getOriginalapprovalname())
            )
            .satisfies(e -> assertThat(e.getOriginaldepartment()).as("check originaldepartment").isEqualTo(actual.getOriginaldepartment()))
            .satisfies(e -> assertThat(e.getSecrecylevel()).as("check secrecylevel").isEqualTo(actual.getSecrecylevel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApprovalAgentUpdatableRelationshipsEquals(ApprovalAgent expected, ApprovalAgent actual) {
        assertThat(expected)
            .as("Verify ApprovalAgent relationships")
            .satisfies(e -> assertThat(e.getOriginalapprovalid()).as("check originalapprovalid").isEqualTo(actual.getOriginalapprovalid()));
    }
}
