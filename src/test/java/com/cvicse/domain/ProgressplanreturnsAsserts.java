package com.cvicse.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProgressplanreturnsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgressplanreturnsAllPropertiesEquals(Progressplanreturns expected, Progressplanreturns actual) {
        assertProgressplanreturnsAutoGeneratedPropertiesEquals(expected, actual);
        assertProgressplanreturnsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgressplanreturnsAllUpdatablePropertiesEquals(Progressplanreturns expected, Progressplanreturns actual) {
        assertProgressplanreturnsUpdatableFieldsEquals(expected, actual);
        assertProgressplanreturnsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgressplanreturnsAutoGeneratedPropertiesEquals(Progressplanreturns expected, Progressplanreturns actual) {
        assertThat(expected)
            .as("Verify Progressplanreturns auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgressplanreturnsUpdatableFieldsEquals(Progressplanreturns expected, Progressplanreturns actual) {
        assertThat(expected)
            .as("Verify Progressplanreturns relevant properties")
            .satisfies(e -> assertThat(e.getPlanstarttime()).as("check planstarttime").isEqualTo(actual.getPlanstarttime()))
            .satisfies(e -> assertThat(e.getPlanendtime()).as("check planendtime").isEqualTo(actual.getPlanendtime()))
            .satisfies(e -> assertThat(e.getReturnstime()).as("check returnstime").isEqualTo(actual.getReturnstime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgressplanreturnsUpdatableRelationshipsEquals(Progressplanreturns expected, Progressplanreturns actual) {
        assertThat(expected)
            .as("Verify Progressplanreturns relationships")
            .satisfies(e -> assertThat(e.getProgressplan()).as("check progressplan").isEqualTo(actual.getProgressplan()))
            .satisfies(e -> assertThat(e.getDocument()).as("check document").isEqualTo(actual.getDocument()));
    }
}
